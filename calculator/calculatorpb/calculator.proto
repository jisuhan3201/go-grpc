syntax = "proto3";

package calculator;
option go_package = "./calculator/calculatorpb";

message SumRequest{
    int32 left=1;
    int32 right=2;
}

message SumResponse {
    int32 result=1;
}

message PrimeDecompositionRequest {
    int32 prime=1;
}

message PrimeDecompositionResponse {
    int32 factor=1;
}

message ComputeAverageRequest {
    int32 number=1;
}

message ComputeAverageReponse {
    double avg=1;
}

message FindMaximumRequest {
    int32 number=1;
}

message FindMaximumResponse {
    int32 maximum=1;
}

message SquareRootRequest {
    int32 number=1;
}

message SquareRootResponse {
    double number_root=1;
}

service CalculatorService {
    // Unary
    rpc Sum(SumRequest) returns (SumResponse);
    // Server Streaming
    rpc Decompose(PrimeDecompositionRequest) returns (stream PrimeDecompositionResponse);
    // Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageReponse);

    // BiDi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse);

    // error handling
    // this RPC will throw an exception if the sent number is negative
    // the error being sent is of the type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse);
}
